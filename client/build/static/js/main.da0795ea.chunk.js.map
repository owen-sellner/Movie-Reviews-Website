{"version":3,"sources":["components/Home/index.js","components/Navigation/history.js","components/Navigation/PrivateRoute.js","components/App/index.js","serviceWorker.js","index.js"],"names":["fetch","require","Review","React","useState","movie","title","description","rating","reviews","setReviews","hasSubmitted","setHasSubmitted","hasErrorMovie","setHasErrorMovie","hasErrorTitle","setHasErrorTitle","hasErrorReview","setHasErrorReview","hasErrorRating","setHasErrorRating","selectedMovie","setSelectedMovie","enteredTitle","setEnteredTitle","enteredReview","setEnteredReview","selectedRating","setSelectedRating","handleAddReview","newReviews","concat","style","margin","Grid","container","direction","justifyContent","alignItems","item","Typography","variant","alignContent","spacing","xs","MovieSelection","hasError","editMovie","event","target","value","ReviewTitle","editTitle","ReviewBody","editBody","ReviewRating","editRating","Button","fullWidth","color","size","onClick","disableElevation","map","props","FormControl","FormLabel","Select","id","onChange","error","MenuItem","FormHelperText","TextField","label","helperText","multiline","rows","RadioGroup","row","FormControlLabel","control","Radio","Home","callApiLoadUserSettings","a","serverURL","method","headers","body","JSON","stringify","userID","state","response","json","status","Error","message","console","log","mode","this","then","res","parsed","parse","express","setState","Component","history","PrivateRoute","path","exact","component","App","listener","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da0795ea.chunk.js","sourcesContent":["// Import React\r\nimport React, { Component } from 'react';\r\n// Import MUI Elements\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Select from '@material-ui/core/Select';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst serverURL = \"http://ov-research-4.uwaterloo.ca:3103\"; \r\n\r\nconst fetch = require(\"node-fetch\");\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userID: 1,\r\n      mode: 0\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    //this.loadUserSettings();\r\n  }\r\n\r\n\r\n  loadUserSettings() {\r\n    this.callApiLoadUserSettings()\r\n      .then(res => {\r\n        //console.log(\"loadUserSettings returned: \", res)\r\n        var parsed = JSON.parse(res.express);\r\n        console.log(\"loadUserSettings parsed: \", parsed[0].mode)\r\n        this.setState({ mode: parsed[0].mode });\r\n      });\r\n  }\r\n\r\n  callApiLoadUserSettings = async () => {\r\n    const url = serverURL + \"/api/loadUserSettings\";\r\n\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        //authorization: `Bearer ${this.state.token}`\r\n      },\r\n      body: JSON.stringify({\r\n        userID: this.state.userID\r\n      })\r\n    });\r\n    const body = await response.json();\r\n    if (response.status !== 200) throw Error(body.message);\r\n    console.log(\"User settings: \", body);\r\n    return body;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Review />\r\n    );\r\n  }\r\n}\r\n\r\n// Parent Component\r\nfunction Review() {\r\n\r\n    // Template Object Array\r\n    const initialReviews = [{\r\n        movie: '',\r\n        title: '',\r\n        description: '',\r\n        rating: '',\r\n    }]\r\n\r\n    // Review List State\r\n    const [reviews, setReviews] = React.useState(initialReviews);\r\n\r\n    // Submission Check State\r\n    const [hasSubmitted, setHasSubmitted] = React.useState(false);\r\n\r\n    // Error Check States\r\n    const [hasErrorMovie, setHasErrorMovie] = React.useState(false);\r\n    const [hasErrorTitle, setHasErrorTitle] = React.useState(false);\r\n    const [hasErrorReview, setHasErrorReview] = React.useState(false);\r\n    const [hasErrorRating, setHasErrorRating] = React.useState(false);\r\n\r\n    // Form Value States\r\n    const [selectedMovie, setSelectedMovie] = React.useState('');\r\n    const [enteredTitle, setEnteredTitle] = React.useState('');\r\n    const [enteredReview, setEnteredReview] = React.useState('');\r\n    const [selectedRating, setSelectedRating] = React.useState('');\r\n\r\n    const handleSubmit = () => {\r\n        // Checks if each input has a value\r\n        if(selectedMovie) {\r\n            setHasErrorMovie(false)\r\n        } else {\r\n            setHasErrorMovie(true)\r\n        }\r\n\r\n        if(enteredTitle) {\r\n            setHasErrorTitle(false)\r\n        } else {\r\n            setHasErrorTitle(true)\r\n        }\r\n\r\n        if(enteredReview) {\r\n            setHasErrorReview(false)\r\n        } else {\r\n            setHasErrorReview(true)\r\n        }\r\n\r\n        if(selectedRating) {\r\n            setHasErrorRating(false)\r\n        } else {\r\n            setHasErrorRating(true)\r\n        }\r\n\r\n        setHasSubmitted(selectedMovie && enteredTitle && enteredReview && selectedRating)\r\n\r\n        if(selectedMovie && enteredTitle && enteredReview && selectedRating) {\r\n            handleAddReview()\r\n        }\r\n    }\r\n\r\n    // Functions to handle the form values\r\n    const handleSelectedMovie = (event) => {\r\n        setSelectedMovie(event.target.value)\r\n    }\r\n    \r\n    const handleEnteredTitle = (event) => {\r\n        setEnteredTitle(event.target.value)\r\n    }\r\n    const handleEnteredReview = (event) => {\r\n        setEnteredReview(event.target.value)\r\n    }\r\n    const handleSelectedRating = (event) => {\r\n        setSelectedRating(event.target.value)\r\n    }\r\n\r\n    // Function to handle a new review being added\r\n    const handleAddReview = () => {\r\n        if (reviews[0].title == '') {\r\n            setReviews([{movie: selectedMovie, title: enteredTitle, description: enteredReview, rating: selectedRating}])\r\n        } else {\r\n            const newReviews = reviews.concat({movie: selectedMovie, title: enteredTitle, description: enteredReview, rating: selectedRating})\r\n            setReviews(newReviews)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div style={{margin: 15}}>\r\n            {/* Creates a column grid for the body of the page */}\r\n            <Grid container\r\n                direction=\"column\"\r\n                justifyContent=\"space-evenly\"\r\n                alignItems=\"center\"\r\n            >\r\n                {/* Page Title */}\r\n                <Grid item>\r\n                    <Typography variant=\"h3\">\r\n                        <b>Movie Reviews</b>\r\n                    </Typography> \r\n                </Grid>\r\n\r\n                {/* Review Form */}\r\n                <Grid container\r\n                    alignContent=\"center\"\r\n                    spacing={2} \r\n                    direction=\"row\"\r\n                >   \r\n                    {/* Row 1 */}\r\n                        <Grid item xs={12}></Grid>\r\n                        <Grid item xs={4}></Grid>\r\n                        <Grid item xs={4}>\r\n                            <Typography variant=\"h4\">\r\n                                New Review\r\n                            </Typography> \r\n                        </Grid>\r\n                        <Grid item xs={12-8}></Grid>\r\n                    {/* Row 2 */}\r\n                        <Grid item xs={4}></Grid>\r\n                        <Grid item xs={1}>\r\n                            <Typography variant=\"h6\">Select Movie:</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <MovieSelection hasError={hasErrorMovie} editMovie={handleSelectedMovie}/>\r\n                        </Grid>\r\n                        <Grid item xs={12-8}></Grid>\r\n                    {/* Row 3 */}\r\n                        <Grid item xs={4}></Grid>\r\n                        <Grid item xs={1}>\r\n                            <Typography variant=\"h6\">Enter Title:</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <ReviewTitle hasError={hasErrorTitle} editTitle={handleEnteredTitle} />\r\n                        </Grid>\r\n                        <Grid item xs={12-8}></Grid>\r\n                    {/* Row 4 */}\r\n                        <Grid item xs={4}></Grid>\r\n                        <Grid item xs={1}>\r\n                            <Typography variant=\"h6\">Enter Review:</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <ReviewBody hasError={hasErrorReview} editBody={handleEnteredReview} />\r\n                        </Grid>\r\n                        <Grid item xs={12-8}></Grid>\r\n                    {/* Row 5 */}\r\n                        <Grid item xs={4}></Grid>\r\n                        <Grid item xs={1}>\r\n                            <Typography variant=\"h6\">Select Rating:</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <ReviewRating hasError={hasErrorRating} editRating={handleSelectedRating}/>\r\n                        </Grid>\r\n                        <Grid item xs={12-8}></Grid>\r\n                    {/* Last Row */}\r\n                        <Grid item xs={5}></Grid> \r\n                        <Grid item xs={2}>\r\n                            <Button fullWidth \r\n                                variant=\"contained\" \r\n                                color=\"primary\" \r\n                                size=\"large\" \r\n                                onClick={handleSubmit}\r\n                                disableElevation>Submit</Button>\r\n                        </Grid>\r\n                </Grid>\r\n\r\n                {/* Submission Message */}\r\n                <Grid item>\r\n                    {hasSubmitted &&\r\n                        <Typography variant=\"body\">Your review has been submitted.</Typography>\r\n                    } \r\n                </Grid>\r\n\r\n                {/* Divider */}\r\n                <Grid item>\r\n                    <Typography variant=\"h4\">\r\n                        - - - - - - - - - - - - - - - - - - - -\r\n                    </Typography> \r\n                </Grid>\r\n                \r\n                {/* User Results */}   \r\n                {reviews.map((item) => {\r\n                    return (\r\n                        <Grid container\r\n                            alignContent=\"center\"\r\n                            spacing={2} \r\n                            direction=\"row\"\r\n                        >   \r\n                            {/* SPACING */}\r\n                            <Grid item xs={12}></Grid>\r\n\r\n                            {/* TITLE */}\r\n                            <Grid item xs={4}></Grid>\r\n                            <Grid item xs={4}>\r\n                                <Typography variant=\"h5\">{item.title != '' && item.title}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12-8}></Grid>\r\n\r\n                            {/* MOVIE */}\r\n                            <Grid item xs={4}></Grid>\r\n                            <Grid item xs={4}>\r\n                                <Typography variant=\"body1\">{item.movie != '' && \"Movie: \" + item.movie}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12-8}></Grid>\r\n\r\n                            {/* BODY */}\r\n                            <Grid item xs={4}></Grid>\r\n                            <Grid item xs={4}>\r\n                                <Typography variant=\"body1\">{item.description != '' && \"Description: \" + item.description}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12-8}></Grid>\r\n\r\n                            {/* RATING */}\r\n                            <Grid item xs={4}></Grid>\r\n                            <Grid item xs={4}>\r\n                                <Typography variant=\"body1\">{item.rating != '' && \"Rating: \" + item.rating}</Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12-8}></Grid>\r\n\r\n                            {/* SPACING */}\r\n                            <Grid item xs={12}></Grid>\r\n                        </Grid>\r\n                    );\r\n                })} \r\n\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\n// Component for movie selection (Select)\r\nfunction MovieSelection(props) {\r\n    return(\r\n        <div>\r\n            <FormControl fullWidth>\r\n                <FormLabel>Select Movie</FormLabel>\r\n                <Select  \r\n                    id=\"movie-select\" \r\n                    variant=\"outlined\"\r\n                    onChange={props.editMovie}\r\n                    error={props.hasError}\r\n                >\r\n                    <MenuItem value=\"Harry Potter and the Philosopher's Stone\">Harry Potter and the Philosopher's Stone</MenuItem>\r\n                    <MenuItem value=\"Harry Potter and the Chamber of Secrets\">Harry Potter and the Chamber of Secrets</MenuItem>\r\n                    <MenuItem value=\"Harry Potter and the Prisoner of Azkaban\">Harry Potter and the Prisoner of Azkaban</MenuItem>\r\n                    <MenuItem value=\"Harry Potter and the Goblet of Fire\">Harry Potter and the Goblet of Fire</MenuItem>\r\n                    <MenuItem value=\"Harry Potter and the Order of the Phoenix\">Harry Potter and the Order of the Phoenix</MenuItem>\r\n                </Select>\r\n                <FormHelperText style={{color:\"red\"}}>{props.hasError && \"Please select a movie\"}</FormHelperText>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\n// Component for review title (Single-line Textbox)\r\nfunction ReviewTitle(props) {\r\n    return(\r\n        <div>\r\n            <TextField \r\n                fullWidth id=\"review-title\" \r\n                label=\"Review Title\" \r\n                variant=\"outlined\" \r\n                onChange={props.editTitle}\r\n                error={props.hasError}\r\n                helperText={props.hasError && \"Please enter your review title\"}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n// Component for review text (Multi-line Textbox)\r\nfunction ReviewBody(props) {\r\n    return(\r\n        <div>\r\n            <TextField \r\n                multiline \r\n                fullWidth \r\n                rows={5} \r\n                id=\"review-body\" \r\n                label=\"Review Body\" \r\n                variant=\"outlined\" \r\n                onChange={props.editBody}\r\n                error={props.hasError}\r\n                helperText={props.hasError && \"Please enter your review\"}\r\n                />\r\n        </div>\r\n    );\r\n}\r\n\r\n// Component for User Score (Radio Group)\r\nfunction ReviewRating(props) {\r\n    return(\r\n        <div>\r\n            <FormControl error={props.hasError}>\r\n                <FormLabel>Rating</FormLabel>\r\n                <RadioGroup row={true} onChange={props.editRating}>\r\n                    <FormControlLabel value=\"1\" control={<Radio />} label=\"1\"/>\r\n                    <FormControlLabel value=\"2\" control={<Radio />} label=\"2\"/>\r\n                    <FormControlLabel value=\"3\" control={<Radio />} label=\"3\"/>\r\n                    <FormControlLabel value=\"4\" control={<Radio />} label=\"4\"/>\r\n                    <FormControlLabel value=\"5\" control={<Radio />} label=\"5\"/>\r\n                </RadioGroup>\r\n                <FormHelperText style={{color:\"red\"}}>{props.hasError && \"Please select the rating\"}</FormHelperText>\r\n            </FormControl>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();","import React from \"react\";\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from '../Home';\r\nimport history from './history';\r\n\r\nexport default function PrivateRoute({\r\n  //authenticated,\r\n  //...rest\r\n}) {\r\n  return (\r\n\r\n    <Router history={history}>\r\n      <Switch>\r\n      <Route path=\"/\" exact component={Home} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}","\r\nimport React, { Component } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n} from 'react-router-dom';\r\n\r\nimport Home from '../Home';\r\nimport PrivateRoute from '../Navigation/PrivateRoute.js';\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      //\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //\r\n  }\r\n\r\n\r\n  componentWillUnmount() {\r\n    this.listener();\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n\t  <Router>\r\n\t    <div>\r\n        <PrivateRoute exact path=\"/\" component={Home}/>\r\n\t    </div>\r\n\t  </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\n\r\n\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}